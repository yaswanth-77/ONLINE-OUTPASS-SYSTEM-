import tkinter as tk
from tkinter import messagebox

class StudentOutpassSystem:
    def __init__(self, root):
        self.root = root
        self.root.title("Student Outpass System")

        # Create input fields
        self.name_label = tk.Label(root, text="Name:")
        self.name_label.pack()
        self.name_entry = tk.Entry(root)
        self.name_entry.pack()

        self.reason_label = tk.Label(root, text="Reason:")
        self.reason_label.pack()
        self.reason_entry = tk.Entry(root)
        self.reason_entry.pack()

        self.date_label = tk.Label(root, text="Date:")
        self.date_label.pack()
        self.date_entry = tk.Entry(root)
        self.date_entry.pack()

        self.days_label = tk.Label(root, text="Number of Days:")
        self.days_label.pack()
        self.days_entry = tk.Entry(root)
        self.days_entry.pack()

        # Submit button
        self.submit_button = tk.Button(root, text="Submit", command=self.submit_request)
        self.submit_button.pack()

    def submit_request(self):
        name = self.name_entry.get()
        reason = self.reason_entry.get()
        date = self.date_entry.get()
        days = self.days_entry.get()

        # Store the outpass details in a database or file
        # You can integrate a database or file handling here to store the outpass requests

        # Prompt for approval/denial
        self.approve_or_deny_request(name)

    def approve_or_deny_request(self, student_name):
        approve_deny_window = tk.Toplevel(self.root)
        approve_button = tk.Button(approve_deny_window, text="Approve", command=lambda: self.approve_request(student_name))
        approve_button.pack()

        deny_button = tk.Button(approve_deny_window, text="Deny", command=lambda: self.deny_request(student_name))
        deny_button.pack()

    def approve_request(self, student_name):
        # Logic to approve the outpass request
        messagebox.showinfo("Approved", f"The outpass request for {student_name} has been approved.")

    def deny_request(self, student_name):
        # Logic to deny the outpass request
        messagebox.showinfo("Denied", f"The outpass request for {student_name} has been denied.")

if __name__ == "__main__":
    root = tk.Tk()
    app = StudentOutpassSystem(root)
    root.mainloop()
